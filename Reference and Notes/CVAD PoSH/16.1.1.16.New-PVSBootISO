<#
.SYNOPSIS
    Creates a Bootable ISO file (using BDM, which requires TSB) for a PVS Deployment using CWC library.

    Copyright (c) Citrix Systems, Inc. All Rights Reserved.
.DESCRIPTION
    This script can accept static streaming IP's set during deployment. If these are not provided it will use parameters mapped to the server steps
    and assume a single NIC configuration.
.Parameter PVS_Server1Name
    Host name of the first PVS server 
.Parameter PVS_Server2Name
    Host name of the second PVS server
.Parameter PVS_DNSAlias
    This optional parameter can be provided by the user to specify a DNS alias vs IP addresses for the PVS boot ISO
.Parameter PVS_DomainDnsName
    DNS name of domain to use, only required when using a DNS alieas and should be zone with DNS Alias
.Parameter PVS_Server1StreamingIP
    IP Address of the 1st PVS logon server to include in the ISO
.Parameter PVS_Server1Port
    1st Port used for PVS streaming, default 6910
.Parameter PVS_Server2StreamingIP
    IP Address of the 2nd PVS logon server to include in the ISO
.Parameter PVS_Server2Port
    1st Port used for PVS streaming, default 6910
.Parameter PVS_ISOFile
    Full path including name of ISO File to create (i.e. "c:\isoFile.iso")
#>
[CmdletBinding()]
param(
    [Parameter(Mandatory=$true)][string] $PVS_Server1Name,
    [Parameter(Mandatory=$true)][string] $PVS_Server2Name,
    [Parameter(Mandatory=$false)][string] $PVS_DNSAlias,
    [Parameter(Mandatory=$false)][string] $PVS_DomainDnsName,
    [Parameter(Mandatory=$false)][string] $PVS_Server1StreamingIP,
    [Parameter(Mandatory=$false)][string] $PVS_Server1Port = 6910,
    [Parameter(Mandatory=$false)][string] $PVS_Server2StreamingIP,
    [Parameter(Mandatory=$false)][string] $PVS_Server2Port = 6910,
    [Parameter(Mandatory=$false)][string] $PVS_ISOFile = "c:\PVSBootISO.iso"
)

try {
    #Registers BDM SDK
    Register-BdmPowerShellSdk

    #Build logon server hash and generate ISO
    if ($PVS_DNSAlias) {
        Write-Host "DNS alias provided, configuring $PVS_DNSAlias in BDM boot"
            $LoginServerHash = @{$PVS_DNSAlias = $PVS_Server1Port}
        
            #Generate ISO File
            cwcPVS\New-BDMIso -LoginServerHash $LoginServerHash -ISOFile $PVS_ISOFile -UseDNS -DNSDomainName $PVS_DomainDnsName -verbose
    }
    elseif ( ($PVS_Server1StreamingIP) -and ($PVS_Server2StreamingIP) ) {
        Write-Host "Static IPs for streaming were provided, configuring $PVS_Server1StreamingIP & $PVS_Server2StreamingIP in BDM boot"
            $LoginServerHash = @{$PVS_Server1StreamingIP = $PVS_Server1Port; $PVS_Server2StreamingIP = $PVS_Server2Port}

            #Generate ISO File
            cwcPVS\New-BDMIso -LoginServerHash $LoginServerHash -ISOFile $PVS_ISOFile -verbose
    }
    else {
        Write-Host "No streaming IP specified, using IP Address configured for each PVS server"
            #Get PVS streaming IP from server records
            cwcPVS\Register-MCLIPSSnapin -verbose
            $PVS_Server1StreamingIP = cwcPVS\Get-PVSServerStreamingIP -server $PVS_Server1Name -verbose
            $PVS_Server2StreamingIP= cwcPVS\Get-PVSServerStreamingIP -server $PVS_Server2Name -verbose

            $LoginServerHash = @{$PVS_Server1StreamingIP = $PVS_Server1Port; $PVS_Server2StreamingIP = $PVS_Server2Port}
        
            #Generate ISO File
            cwcPVS\New-BDMIso -LoginServerHash $LoginServerHash -ISOFile $PVS_ISOFile -verbose
    }

    Write-Host "A PVS boot ISO has been created in $PVS_ISOFile"
}
catch {
    $Error[0]
    exit 1
}

