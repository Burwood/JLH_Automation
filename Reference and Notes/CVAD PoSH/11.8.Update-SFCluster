<#
.SYNOPSIS
    Updates a SF cluster service using CWC library

    Copyright (c) Citrix Systems, Inc. All Rights Reserved.
.DESCRIPTION
#>
try {
    Write-Host "Updating StoreFront cluster"
    write-host "Adding snapins and importing modules for StoreFront"
	
    if ((Get-PSSnapin -Name Citrix.DeliveryServices.* -ea 0) -eq $null) {
		Add-PSSnapin -ErrorAction "SilentlyContinue" -Name Citrix.DeliveryServices.*
	}    
	$installDir = (Get-ItemProperty -Path HKLM:\SOFTWARE\Citrix\DeliveryServicesManagement -Name InstallDir).InstallDir
	Get-ChildItem "$installDir\Cmdlets" | ? { $_.FullName.EndsWith('psm1') } | % { Import-Module $_.FullName -Verbose:$false 2> Out-Null}

    $serviceName = "CitrixClusterService"

	#Stop Service
	$service = Get-Service | Where { $_.Name -eq $serviceName }
	if ($service -and $service.Status -eq 'Running') {
		Set-Service -Name $serviceName -Status Stopped

		Start-Sleep -Seconds 1
		$svc = Get-Service -Name $serviceName

		if ($svc.Status -ne 'Stopped') {
			#Wait some more
			Start-Sleep -Seconds 1
			$svc = Get-Service -Name $serviceName
		}

		if ($svc.Status -ne 'Stopped') {
			Write-Host "Unable to stop service $serviceName, last status was " $svc.Status
		} else {
			Set-Service -Name $serviceName -StartupType Disabled
		}
	}

	#Send Update to Cluster
	$lastStatus = Get-DSConfigurationReplicationState -Hostname "localhost"
	
	Start-DSConfigurationReplicationClusterUpdate -Confirm:$false | Out-Null
	
	$status = Get-DSConfigurationReplicationState -Hostname "localhost"
	
	while ( $lastStatus.LastEndTime -eq  $status.LastEndTime) {
		# Adding a sleep to help minimize the amount of output
		Start-Sleep -Seconds 5
		$status = Get-DSConfigurationReplicationState -Hostname "localhost"
	}
	
	if ($status.LastUpdateStatus -eq [Citrix.DeliveryServices.ConfigurationReplication.Contract.ServiceStatus.UpdateStatus]::Errored) {
		$err = "Configuration propagation failed with message {0}" -f $status.LastError
		throw $err
	}

     write-host "StoreFront Cluster Updated Successfully"
} catch {
    $Error[0]
    exit 1
}