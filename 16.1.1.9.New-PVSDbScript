<#
.SYNOPSIS
    Generates a SQL script to create a PVS database using CWC library

    Copyright (c) Citrix Systems, Inc. All Rights Reserved.
.DESCRIPTION

.Parameter PVS_DomainDnsName
    DNS name of domain to use
.Parameter PVS_PrimarySQLHostname
    Host name of SQL server to create PVS database on
.Parameter PVS_PrimarySQLInstanceName
    Instance name of primary SQL server, leave blank for default instance
.Parameter PVS_StagingServerName
    Hostname of staging server hosting the file share where the sql script will be generated
.Parameter PVS_ShareName
    Name of file share on the staging server where the sql script will be generated
.Parameter PVS_DatabaseName
    Name of PVS database to create
.Parameter PVS_FarmName
    Name of PVS farm to create
.Parameter PVS_SiteName
    Name of PVS site to create
.Parameter PVS_collectionName
    Name of initial PVS collection to create
.PVS_DefaultAuthGroup
    Name of AD group to set as full admins for PVS Farm
.PVS_dbIs2012
    Bool, set to true of SQL is 2012 or greater, false if SQL is a version prior to 2012
.PVS_SqlScriptPath
    Path to store SQL script
#>
[CmdletBinding()]
param(
    [Parameter(Mandatory=$true)][string] $PVS_DomainDnsName,
    [Parameter(Mandatory=$true)][string] $PVS_PrimarySQLHostname,
    [Parameter(Mandatory=$false)][string] $PVS_PrimarySQLInstanceName,
    [Parameter(Mandatory=$true)][string] $PVS_StagingServerName,
    [Parameter(Mandatory=$false)][string] $PVS_ShareName = "PVSShare",
    [Parameter(Mandatory=$false)][string] $PVS_DatabaseName = "CTX_PVS_DB",
    [Parameter(Mandatory=$false)][string] $PVS_FarmName = "PrimaryFarm",
    [Parameter(Mandatory=$false)][string] $PVS_SiteName = "PrimarySite",
    [Parameter(Mandatory=$false)][string] $PVS_CollectionName = "PrimaryCollection",
    [Parameter(Mandatory=$false)][string] $PVS_DefaultAuthGroup = "CTX_RES_PVS_Admins",
    [Parameter(Mandatory=$false)][string] $PVS_dbIs2012 = "True",
    [Parameter(Mandatory=$false)][string] $PVS_SqlScriptPath = (Join-Path -Path $ENV:Temp -ChildPath "Citrix")
)

try {
    #Format Names
    $PVS_DatabaseServer = "$PVS_PrimarySQLHostname.$PVS_DomainDnsName/$PVS_PrimarySQLInstanceName"
    $PVS_SqlScriptPath = "\\$PVS_StagingServerName.$PVS_DomainDnsName\$PVS_ShareName"
    $PVS_FormattedAuthGroup = cwcPVS\Format-PVSAuthGroup -GroupName $PVS_DefaultAuthGroup -Verbose

    Write-Host "Default Auth Group: $PVS_FormattedAuthGroup"
    Write-Host "Database Server: $PVS_DatabaseServer"
    Write-Host "PVS SQL Script Path: $PVS_SqlScriptPath"
    Write-Host "PVS SQL Script Path: $PVS_SqlScriptPath"
    Write-Host "PVS database is 2012 or newer: $PVS_dbIs2012"

    #Convert string to bool
    $PVS_BooldbIs2012 = [System.Convert]::ToBoolean($PVS_dbIs2012)

    #Generate sql script file
    Write-Host "Generating sql script for PVS file"
    cwcPVS\New-SiteDBScript -databaseName $PVS_DatabaseName -farmName $PVS_FarmName -siteName $PVS_SiteName `
                        -collectionName $PVS_CollectionName -PVSServiceAccountDomain $PVS_DomainDnsName `
                        -defaultAuthGroup $PVS_FormattedAuthGroup -databaseServer $PVS_DatabaseServer `
                        -dbIs2012 $PVS_BooldbIs2012 -sqlScriptPath $PVS_SqlScriptPath -verbose

}
catch {
    $Error[0]
    exit 1
}